   name: WebDriverIO Tests

   on:
     push:
       branches:
         - main
     pull_request:
       branches:
         - main

   jobs:
     tests:
       runs-on: ubuntu-latest
       services:
         selenium:
           image: selenium/standalone-chrome:latest
           options: --shm-size=2g

       steps:
       - name: Checkout code
         uses: actions/checkout@v2

       - name: Set up Node.js
         uses: actions/setup-node@v2
         with:
           node-version: '18'

       - name: Install dependencies
         run: |
           npm cache clean --force
           npm install

       - name: Give execution permissions to wdio
         run: chmod +x ./node_modules/.bin/wdio

       - name: Install WebDriverIO globally
         run: npm install -g wdio-cli

       - name: Verify installed packages
         run: ls -l ./node_modules/.bin

       - name: Run WebDriverIO tests
         run: |
           npx wdio run wdio.conf.ts

       - name: Generate Allure report
         run: |
           npx allure generate allure-results --clean  # Genera el reporte de Allure
          
       - name: Start Allure server (Docker)
         run: |
           docker pull allure-framework/allure-commandline:latest
           docker run -d -p 5050:8080 -v $(pwd)/allure-report:/allure-report allure-framework/allure-commandline:latest serve /allure-report

       - name: Wait for Allure server to start
         run: sleep 10  # Espera para que el servidor se inicie

       - name: Upload Allure results as artifact
         uses: actions/upload-artifact@v4
         with:
             name: allure-results
             path: allure-results

       - name: Upload Allure report as artifact
         uses: actions/upload-artifact@v4
         with:
           name: allure-report
           path: allure-report   # Subir el reporte generado como artefacto